{
  "name": "comicogs",
  "version": "2.0.0",
  "description": "Ultimate comic book collection management platform with AI-powered features",
  "private": true,
  "workspaces": [
    "frontend",
    "backend"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:frontend\" \"npm run dev:backend\"",
    "dev:frontend": "npm run dev --workspace=frontend",
    "dev:backend": "npm run dev --workspace=backend",
    "build": "npm run build --workspace=frontend && npm run build --workspace=backend",
    "build:frontend": "npm run build --workspace=frontend",
    "build:backend": "npm run build --workspace=backend",
    "start": "concurrently \"npm run start:frontend\" \"npm run start:backend\"",
    "start:frontend": "npm run start --workspace=frontend",
    "start:backend": "npm run start --workspace=backend",
    "test": "npm run test --workspace=frontend && npm run test --workspace=backend",
    "test:frontend": "npm run test --workspace=frontend",
    "test:backend": "npm run test --workspace=backend",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:smoke": "playwright test smoke.spec.ts",
    "test:a11y": "playwright test accessibility.spec.ts",
    "demo:capture": "node scripts/demo-capture.js",
    "test:visual": "playwright test visual-regression.spec.ts",
    "lighthouse": "lhci autorun",
    "lighthouse:ci": "lhci autorun --upload.target=temporary-public-storage",
    "storybook": "npm run storybook --workspace=frontend",
    "storybook:build": "npm run build-storybook --workspace=frontend",
    "lint": "npm run lint --workspace=frontend && npm run lint --workspace=backend",
    "lint:fix": "npm run lint:fix --workspace=frontend && npm run lint:fix --workspace=backend",
    "type-check": "npm run type-check --workspace=frontend && npm run type-check --workspace=backend",
    "db:setup": "npm run db:setup --workspace=backend",
    "db:migrate": "npm run db:migrate --workspace=backend",
    "db:seed": "npm run db:seed --workspace=backend",
    "db:reset": "npm run db:reset --workspace=backend",
    "db:fresh": "npm run db:fresh --workspace=backend",
    "db:studio": "npm run db:studio --workspace=backend",
    "db:start": "docker-compose -f docker-compose.dev.yml up -d db",
    "db:stop": "docker-compose -f docker-compose.dev.yml down",
    "export:pages": "npm run export:pages --workspace=frontend",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:dev": "docker-compose -f docker-compose.dev.yml up -d",
    "docker:logs": "docker-compose logs -f",
    "clean": "rm -rf frontend/node_modules backend/node_modules node_modules frontend/.next backend/dist",
    "fresh": "npm run clean && npm install"
  },
  "keywords": [
    "comicogs",
    "comics",
    "nextjs",
    "shadcn-ui",
    "tailwindcss",
    "prisma",
    "postgres",
    "stripe",
    "collection-management"
  ],
  "author": "Comicogs Team",
  "license": "MIT",
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@lhci/cli": "^0.15.1",
    "concurrently": "^8.2.2",
    "eslint": "^9.0.0",
    "husky": "^9.1.6",
    "lint-staged": "^15.2.10",
    "prettier": "^3.3.3"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  }
}
